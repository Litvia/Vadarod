package by.homework.lessons.task8;
//Задание3.
//В методе main вызовите этот метод, передайте любые строки, в качестве аргументов и выведите результат в консоль.
//Дан текст: "Каждая строка, создаваемая с помощью оператора new, литерала (заключенная в двойные апострофы) или метода класса,
//создающего строку, является экземпляром класса String. Особенностью объекта класса String является то, что его значение не может быть
//изменено после создания объекта при помощи любого метода класса. Изменение строки всегда приводит к созданию нового объекта в heap.
//Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке.
//Произведенные изменения можно сохранить переинициализируя ссылку."
//2.1 Написать метод который будет применять индекс (int k) и подстроку (String str). Метод должен возвращать тип String
//2.2 В тексте после символа каждого слова с индексом k вставить заданную подстроку.Используемые методы (split(), substring())
public class task8_3 {
    // Метод для обработки текста
    public static String insertSubstring(String text, int k, String str) {
//Сначала проверяем корректность индекса k. Если он выходит за пределы строки или меньше либо равен нулю, то сразу возвращаем исходный текст.
        if (k <= 0 || k > text.length() || str == null) {
            return text; // Если индекс недопустим или подстрока пустая, возвращаем оригинальный текст
        }
//C помощью метода split() разбиваем текст на отдельные слова
        String[] words = text.split(" ");

//Создаем новую строку для хранения результата
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < words.length; i++) {
            String word = words[i];

// Проверяем, подходит ли слово для вставки подстроки
            if (word.length() >= k) {
// Вставляем подстроку после символа с индексом k
                result.append(word.substring(0, k)); // До символа с индексом k
                result.append(str);                  // Добавляем подстроку
                result.append(word.substring(k));    // Остальная часть слова
            } else {
// Если длина слова меньше k, добавляем слово без изменений
                result.append(word);
            }

// Добавляем пробел между словами
            if (i != words.length - 1) {
                result.append(' ');
            }
        }

        return result.toString(); // Преобразуем StringBuilder в String и возвращаем
    }

//Создаем текст и вызываем метод insertSubstring, передавая текст, индекс и подстроку. Результат выводится в консоль.
    public static void main(String[] args) {
        String text = "Каждая строка, создаваемая с помощью оператора new, литерала (заключенная в двойные апострофы) и ли метода класса, создающего строку, является экземпляром класса String. Особенностью объекта класса String является то, что его значение не может быть изменено после создания объекта при помощи любого метода класса. Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке. Произведенные изменения можно сохранить переинициализируя ссылку.";

        int k = 5; // Индекс, после которого будем вставлять подстроку
        String str = "_***_"; // Подстрока для вставки

        System.out.println(insertSubstring(text, k, str));
    }
}
